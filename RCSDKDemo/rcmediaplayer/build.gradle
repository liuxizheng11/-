group 'com.rocedar.android.base'
def artifactId = "mediaplayer"

apply plugin: 'com.android.library'
apply plugin: 'maven'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.rcsdkCode.mediaplayer
        versionName "$rootProject.ext.rcsdkVersion.mediaplayer"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:' + rootProject.ext.dependVersion.support
    
    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.3'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.3'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.3'
    compile 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.3'
}


uploadArchives {
    repositories {
        mavenDeployer {
            if (rootProject.ext.Debug.toBoolean()) {
                repository(url: "http://maven.rocedar.com:18003/nexus/content/repositories/snapshots/") {
                    authentication(userName: "admin", password: "guiBai_maven")
                }
                pom.version = "$rootProject.ext.rcsdkDebugVersion.mediaplayer"
            } else {
                repository(url: "http://maven.rocedar.com:18003/nexus/content/repositories/releases/") {
                    authentication(userName: "admin", password: "guiBai_maven")
                }
                pom.version = "$rootProject.ext.rcsdkVersion.mediaplayer"
            }
            pom.artifactId = "$artifactId"
            pom.groupId = "$project.group"
        }
    }
}
